@charset "UTF-8";
/*文字コードにUTF-8（ほぼ国際標準）を使うという宣言*/

html {
    font-size: 100%;
    /*ブラウザの設定（拡大縮小）に合わせて柔軟に変わるよう明記※裏設定で基本16px*/
}

/* 上の二つは呪文のようなもの*/
/*以下、基本設定 */
body {
    font-family: sans-serif;
    /*どのブラウザでもゴシック体が選ばれるように*/
    font-size: .875rem;
    /*remはhtmlで指定されているサイズを1remとした相対値　絶対値にしてしまうとブラウザの拡大縮小に対応しない*/
    color: #2a2a2a;
}

a {
    text-decoration: none;
}

img {
    max-width: 100%;
    /*画像の大きさが元からどんなに大きくても親要素をはみ出すことはしない*/
}

li {
    list-style: none;
}

.wrapper {
    /*幅を整えるクラスでよく使われる名前*/
    max-width: 1200px;
    margin: 0 auto;
    /*左右均等に余白を割り振ってコンテンツを真ん中に配置*/
    padding: 0 5%;
    /*左右の内余白をその時の大きさの5％だけ確保*/
}

.sec-title {
    font-size: 1.5rem;
    margin-bottom: 20px;
}

.btn {
    color: #2a2a2a;
    border: solid 1px #2a2a2a;
    font-size: .75rem;
    padding: 14px 36px;
    /*上下より左右の方が大きく広げた方がベター*/
    display: inline-block;
    /*aの性格(inline)とpなどの性格(block)をブレンドしたいいとこどりの性格に強制→余白を取りたい時に設定*/
    margin-top: 30px;
}

.btn:hover {
    color: #fff;
    background-color: #b4ddf7;
    border: none;
}

/* ローディング画面 */
#loading {
    background-color: #d3d3d3;
    position: fixed;
    inset: 0;
    z-index: 9999;
    display: grid;
    place-items: center;
}

#loading-screen {
    background-color: #b4ddf7;
    position: fixed;
    inset: 0;
    z-index: 9998;
    translate: 0 100vh;
}

#loading p {
    font-size: 2rem;
    font-family: "Oswald", sans-serif;
    font-optical-sizing: auto;
    font-weight: 400;
    font-style: normal;
}

/*スライドメニュー*/
/* 開閉ボタン */
.btn-menu {
    position: fixed;
    right: 1rem;
    top: 2rem;
    z-index: 4;
    padding: .5rem 1rem;
    border: 1px solid #2a2a2a;
    border-radius: 50%;
    height: 4rem;
    width: 4rem;
    transition: .4s;
}
.btn-menu svg {
    fill: #2a2a2a;
    margin-top: .25rem;
    height: 2rem;
    width: 2rem;
}

/* 閉じるボタン */
#menu-close {
    border: 1px solid #fff;
}
#menu-close svg {
    fill: #fff;
}

/* スライドメニューパネル */
#menu-panel {
    position: fixed;
    top: 0;
    right: 0;
    z-index: 4;
    padding: 8rem 2rem 2rem;
    width: max(32vw, 20rem);
    height: 100vh;
    background-color: #2a2a2a;
    box-shadow: 0 0 2rem #2a2a2a;
    font-family: "Oswald", serif;
    translate: 100vw;
}
.menu-list {
    list-style: none;
}
.menu-list li {
    margin: 1.5rem 0;
    opacity: 0;
}
.menu-list a {
    color: #fff;
    text-decoration: none;
    font-size: 2rem;
}

/* ヘッダー */
#header {
    height: 100vh;
    /*vhとはウィンドウサイズの縦の割合*/
    background-image: url(../pic/sakura.jpg);
    /*背景画像*/
    background-repeat: no-repeat;
    /*header内に背景画像を繰り返し配置するかどうか*/
    background-size: cover;
    /*広がり方*/
    background-position: center top;
    /*どこに焦点をあてるか 左 上*/
    margin-bottom: 80px;
    position: relative;
    /*基準点*/
}

#header h1 {
    background: #000;
    padding: 20px 40px;
    color: #fff;
}

/* #headerの中のh1 */
.site-title {
    position: absolute;
    /*親基準に対しての絶対点*/
    top: 30px;
    right: 100px;
    z-index: 1;
}

#header p {
    font-size: 1.2rem;
    text-align: right;
    padding: 10px 20px;
    background-color: rgba(250, 235, 215, 0.462);
}

/* #headerの中のp */
.introduction {
    position: absolute;
    /*親基準に対しての絶対点*/
    top: 150px;
    right: 30px;
    z-index: 1;
}

#works {
    text-align: center;
    margin-bottom: 80px;
    /*次のセクションまでの距離*/
}

#works .flex-item {
    display: flex;
    margin-top: 40px;
    gap: 20px;
    /*縦のすき間対策*/

    /* 対象方向の並び:端にくっつきながら均等に並べる */
    justify-content: space-between;

    /* モノが詰りそうなら折り返して配置する */
    /* flex-wrap: wrap; */

    align-items: stretch;
}

#works .item {
    width: 48%;
    position: relative;
    /*1⃣相対の基準点(親要素の決定）*/
}

#works .item .text {
    /* max-width: 290px; */
    background: rgba(0, 0, 0, .5);
    padding: 15px 25px;
    color: #fff;
    position: absolute;
    /*2⃣絶対点（動かしたい子要素を選択）*/
    top: 50%;
    /*3⃣親基準の上から40％の位置*/
    /* bottom: 60%;topとの併用不可 */
    left: 50%;
    /*親基準の左から20％の位置*/
    /* right: 40%;rightとの併用不可 */
    /* 自分の形・状態を変形 */
    /* 値:translateは位置ずらし */
    transform: translate(-50%, -50%);
    /*自分の半身(50%)を左上へずらす*/
}

#works .item .title {
    font-size: 1.25rem;
    margin-bottom: 2px;
}

.sec-intro {
    text-align: center;
    margin-bottom: 15px;
}

.flex {
    display: flex;
    gap: 10px;
    margin-bottom: 60px;
    justify-content: center;
}

.item1 {
    background-color: #73d082;
    padding: 10px 20px;
}

.item2 {
    background-color: #78c2c6;
    padding: 10px 20px;
}

#contact {
    height: 520px;
    /*高さの固定*/
    background-image: url(../img/fashion.jpg);
    /*背景画像 ※cssから見て一階層上がったところ(../)にimgフォルダがある*/
    background-size: cover;
    /*背景の広がりの指定※object-fit:coverの背景画像版*/
    background-position: center top;
    /*どこに焦点をあてるか 左 上の指定（基準がleft top)*/
    background-repeat: no-repeat;
    /*スペースが余った際に画像を繰り返すかどうか*/
    text-align: center;
    padding-top: 60px;
    margin-bottom: 80px;
}

/* 背景画像を敷くよりもimgタグの重ね合わせを使った方が検索エンジン的にaltがあって分かりやすく、JavaScriptで画像指定する時もやりやすい。 */

.catalog-antique {
    padding: 60px 0;
    background: #f5f5f5;
}

/* 上の方で定義した.sec-titleに対して、margin-bottomの部分だけ上書き */
.catalog-antique .sec-title {
    margin-bottom: 20px;
}

.catalog-antique .flex-item {
    /*.itemをまとめているクラス*/
    display: flex;
    align-items: center;
    /*flexの子どもたちの縦位置を中央に揃える*/
    gap: 40px;
}

.catalog-antique .item {
    width: 50%;
    /*子どもの幅を半々に*/
}

/* :last-child→最後尾の対象物 疑似クラス */
.catalog-antique:last-child {
    margin-bottom: 80px;
}

.catalog-antique li {
    /* マーカーの復活 */
    list-style: disc;

    /* マーカーの位置 */
    list-style-position: inside;

    /* ２行目にいってしまった時の字下げ方法 */
    padding-left: 1.5em;
    /*まずは全体の位置を1.5em下げる 1emは1文字分*/
    text-indent: -1.5em;
    /*先頭の位置のみ、padding-leftで下げた分だけ元に戻す*/
    /* emは直近の親のフォントサイズを基準にしている */
}

.catalog-antique p {
    margin-bottom: 10px;
}

/* dlを使った場合の設定↓
.catalog-antique dt{
    font-weight: bold;
}
.catalog-antique dd{
    font-size: .75rem;
    margin-left: 10px;
    color: #855;
} */
/*各ddの最後尾にのみクラス名（dd_last)を付与しているのが条件*/
/* .catalog-antique .dd_last{
    margin-bottom: 10px;
} */

#footer {
    background: #333;
    font-size: 0.75rem;
}

#footer .flex-item {
    display: flex;
    color: #fff;
    padding: 100px 100px;
    /*space-between→端から端に配置しつつ、均等にならべる*/
    justify-content: space-between;
    align-items: center;
}

#footer li{
    margin: 8px 0;
}

#footer .item {
    /* width: 33.33333%; 三分割 */
    /* width: 30%; */
    width: 48%;
}

#footer .item .title {
    font-size: 1.2rem;
    font-weight: bold;
    margin-bottom: 10px;
}

#footer .copyright {
    background: #fff;
    text-align: center;
    padding: 30px 0;
}

#footer .item a {
    color: #fff;
}

.fadein{
    opacity: 0;
}

/* ☆条件分岐☆
「最大でも」600pxが限界の時 = 画面が小さい */
/* レスポンシブデザインはデバイスに依存しているのではなく、画面の幅による */
@media screen and (max-width: 600px) {
    #works .flex-item {
        /* flexは必ずしも横並びだけの指示じゃない */
        /* ※ただし、デフォルトは横並びだった */
        flex-direction: column;
        /*並び方の指定 rowは横（デフォルト）、columnは縦*/
    }

    #works .item {
        width: 100%;
    }

    .flex {
        flex-direction: column;
    }

    #fashion {
        background-size: 1000px 450px;
        padding-top: 35px;
        margin-bottom: 50px;
    }

    .catalog-antique .flex-item {
        flex-direction: column;
    }

    .catalog-antique .item {
        width: 100%;
    }

    #footer .flex-item {
        flex-direction: column;
        padding: 30px;
        gap: 50px;
    }

    #footer .item {
        width: 100%;
    }

    /* 疑似クラスを使って.itemの先頭要素だけ指定 */
    #footer .item {
        text-align: center;
    }
}